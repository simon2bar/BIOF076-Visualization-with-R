ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
xlim(c(0, .5))+
theme(panel.grid.major.x =element_line(color = 'black' ))
ggplot(data_reorderd) +
geom_line(aes(x=percent, y=Area_sorted))+
geom_point(aes(x=percent, y=Area_sorted, color = year)) +
theme(legend.position = 'none')+
xlab('') +
ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
xlim(c(0, .1))+
theme(panel.grid.major.x =element_line(color = 'black' ))
ggplot(data_reorderd) +
geom_line(aes(x=percent, y=Area_sorted))+
geom_point(aes(x=percent, y=Area_sorted, color = year)) +
theme(legend.position = 'none')+
xlab('') +
ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
theme(panel.grid.major.x =element_line(color = 'black' ))
ggplot(data_reorderd) +
geom_line(aes(x=percent, y=Area_sorted))+
geom_point(aes(x=percent, y=Area_sorted, color = year)) +
theme(legend.position = 'none')+
xlab('') +
ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
theme(panel.grid.major.x =element_line(color = 'black'),
legend.position = 'none')
plot <- ggplot(data_reorderd) +
geom_line(aes(x=percent, y=Area_sorted))+
geom_point(aes(x=percent, y=Area_sorted, color = year)) +
theme(legend.position = 'none')+
xlab('') +
ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
theme(panel.grid.major.x =element_line(color = 'black'),
legend.position = 'none')
plot
ggsave('example_dumbbell_plot.png', plot)
ggsave('example_dumbbell_plot.png', plot, width = 9)
ggsave('example_dumbbell_plot.tiff')
ggsave('example_dumbbell_plot.jpeg')
?ggsave
ggplot(data_reorderd) +
geom_line(aes(x=percent, y=Area_sorted))+
geom_point(aes(x=percent, y=Area_sorted, color = year)) +
theme(legend.position = 'none')+
xlab('') +
ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
theme(panel.grid.major.x =element_line(color = 'black'),
legend.position = 'none')
library(png)
install.packages('png')
install.packages("png")
install.packages('png')
install.packages('tiff')
ggsave('example_dumbbell_plot.tiff', plot )
library(tidyverse)
ggsave('example_dumbbell_plot.tiff', plot )
ggplot(data_reorderd) +
geom_line(aes(x=percent, y=Area_sorted))+
geom_point(aes(x=percent, y=Area_sorted, color = year)) +
theme(legend.position = 'none')+
xlab('') +
ylab('')+
ggtitle('Dumbell Plot') +
theme_classic()+
theme(panel.grid.major.x =element_line(color = 'black'),
legend.position = 'none')
ggsave('example_dumbbell_plot.tiff', plot )
plot(cars)
ggline(ToothGrowth, "dose", "len",
linetype = "supp", shape = "supp",
color = "supp", palette = c("#00AFBB", "#E7B800"), add='mean_se')
library(ggpubr)
install.packages('ggpubr')
install.packages("ggpubr")
library(ggpubr)
ggline(ToothGrowth, "dose", "len",
linetype = "supp", shape = "supp",
color = "supp", palette = c("#00AFBB", "#E7B800"), add='mean_se')
data <- read_tsv('../src/Reporter_assay_results.tsv.gz')
library(tidyverse)
data <- read_tsv('../src/Reporter_assay_results.tsv.gz')
View(data)
install.packages('ggpubr')
data <- read_tsv('../src/Reporter_assay_results.tsv.gz')
library(ggpubr)
library(tidyverse)
data <- read_tsv('../src/Reporter_assay_results.tsv.gz')
data <- read_tsv('../src/Reporter_assay_results.tsv.gz') %>%
pivot_longer(c(WildType, Mutant), names_to = condition, values_to = SU)
data <- read_tsv('../src/Reporter_assay_results.tsv.gz') %>%
pivot_longer(c(WildType, Mutant), names_to = 'condition', values_to = 'SU')
View(data)
ggline(data = data,
x='Time',
y='SU'
color = 'condition'
ggline(data = data,
x='Time',
y='SU',
color = 'condition'
)
ggline(data = data,
x='Time',
y='SU',
color = 'condition'
add='mean'
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean'
)
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
)
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
) +
geom_vline(xintercept = 8)
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
) +
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
)
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
)
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
)
?ggline
Sys.sleep(2000)
library(ggpubr)
library(tidyverse)
ggline(ToothGrowth, "dose", "len",
linetype = "supp", shape = "supp",
color = "supp", palette = c("#00AFBB", "#E7B800"), add='mean_se')
Sys.sleep(2000)
getwd()
getwd()
getwd()
data <- read_tsv('../src/Reporter_assay_results.tsv.gz') %>%
pivot_longer(c(WildType, Mutant), names_to = 'condition', values_to = 'SU')
ggline(data = data,
x='Time',
y='SU',
color = 'condition',
add='mean_se'
)
getwd()
data <- read_tsv('Reporter_assay_results.tsv.gz') %>%
pivot_longer(c(WildType, Mutant), names_to = 'condition', values_to = 'SU')
library(ggpattern)
remotes::install_github("coolbutuseless/ggpattern")
ggplot(df) +
geom_col_pattern(
aes(level, outcome, pattern_fill = level),
pattern = 'stripe',
fill    = 'white',
colour  = 'black'
) +
theme_bw(18) +
theme(legend.position = 'none') +
labs(
title    = "ggpattern::geom_pattern_col()",
subtitle = "pattern = 'stripe'"
)
df <- data.frame(level = c("a", "b", "c", 'd'), outcome = c(2.3, 1.9, 3.2, 1))
ggplot(df) +
geom_col_pattern(
aes(level, outcome, pattern_fill = level),
pattern = 'stripe',
fill    = 'white',
colour  = 'black'
) +
theme_bw(18) +
theme(legend.position = 'none') +
labs(
title    = "ggpattern::geom_pattern_col()",
subtitle = "pattern = 'stripe'"
)
gapminder_data <- read_tsv('../src/gapminder_2007.tsv.gz')
View(gapminder_data)
gapminder_ss <- read_tsv('../src/gapminder_2007.tsv.gz')
gapminder_bygender <- gapminder_ss %>%
mutate(gender = sample(c('male', 'female'), nrow(gapminder_ss), replace = T))
iris_extra <- iris %>% mutate(flowering_time = sample(c('day', 'night'),size = nrow(iris) replace = T) )
iris_extra <- iris %>% mutate(flowering_time = sample(c('day', 'night'),size = nrow(iris), replace = T) )
?geom_bar_pattern
ggplot(iris_extra) +
geom_bar_pattern(aes(x= Species, pattern = flowering_time))
ggplot(iris_extra) +
geom_bar_pattern(aes(x= Species, pattern = flowering_time), position = 'dodge')
ggplot(iris_extra) +
geom_bar_pattern(aes(x= Species, pattern = flowering_time, fill = Species), position = 'dodge')
ggplot(gapminder_bygender) +
geom_bar_pattern(x= continent, pattern = gender, fill = continent)
colnames(gapminder_bygender)
ggplot(gapminder_bygender) +
geom_bar_pattern(x= continent, pattern = gender, fill = continent)
ggplot(gapminder_bygender) +
geom_bar_pattern(aes(x= continent, pattern = gender, fill = continent) )
ggplot(gapminder_bygender) +
geom_bar_pattern(aes(x= continent, pattern = gender, fill = continent), position = 'dodge')
ggplot(gapminder_bygender) +
geom_bar_pattern(aes(x= continent, fill = continent), pattern = 'stripe', position = 'dodge')
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
library(gapminder)
p <- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
knitr::include_graphics('../src/gapminder_bubble_animated.gif')
library(gapminder)
install.packages('gapminder')
install.packages("gapminder")
library(gapminder)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
install.packages('gganimate')
library(gapminder)
library(ggplot)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
library(ggplot)
library(gganimate)
library(ggplot)
library(ggplot2)
library(gganimate)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
library(ggsci)
install.packages('gganimate', type = 'source')
install.packages("gganimate", type = "source")
install.packages('gganimate', type = 'source')
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
View(iris_extra)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
#scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
library(gapminder)
library(ggplot2)
library(gganimate)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
#scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
transition_time(date)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
#scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(date)
gapminder
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
#scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
#scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10()
library(ggsci)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_color_futurama()+
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()#+
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()#+
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()#+
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
#remotes::install_github("coolbutuseless/ggpattern")
library(ggpattern)
library(sf)
library(ggspatial)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
ggplot(data = nc ) +
geom_sf() +
theme_bw()
View(gapminder_ss)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
class(nc)
nc_table <- as_tibble(nc)
library(tidyverse)
nc_table <- as_tibble(nc)
View(nc_table)
ggplot(nc_table)+
geom_sf(aes(geometry =  geometry))
colnames(nc_table)
nc_table <- as_tibble(nc) %>% rename(shape_data = geometry)
ggplot(nc_table)+
geom_sf(aes(geometry =  shape_data))
nc_table <- as_tibble(nc) %>% rename(shape_data = geometry)
data("USArrests")
USArrests
data("USArrests")
USArrests
states <- maps::map("state", plot = FALSE, fill = TRUE) %>% st_as_sf() %>%
as_tibble %>%
rename(state = ID,
geometry = geom)
tates
states
states <- states %>%
mutate(state = tolower(state))
arrestData_with_mapData <- arrests %>%
mutate(state = tolower(state)) %>%
inner_join( states)
states
states <- states %>%
mutate(state = tolower(state))
arrests <- USArrests %>% rownames_to_column('state')
arrestData_with_mapData <- arrests %>%
mutate(state = tolower(state)) %>%
inner_join( states)
View(arrestData_with_mapData)
View(arrestData_with_mapData)
md_covid_cases <- read_tsv('../src/MD_COVID_cases_by_zip.tsv.gz')
md_county_to_zip <- read_tsv('../src/maryland_zipcode_to_county.tsv.gz')
md_shape <- st_read('../src/maryland_counties.shp')
'../src/maryland_counties.shp'
md_shape <- st_read('../src/maryland_counties.shp')
md_shape <- st_read ('https://github.com/davemcg/MD_ZIP_LEVEL_COVID_APP/raw/master/www/Maryland_Political_Boundaries_-_ZIP_Codes_-_5_Digit-shp/BNDY_ZIPCodes5Digit_MDP.shp')
library(sf)
library(ggspatial)
library(tidyverse)
md_covid_cases <- read_tsv('../src/MD_COVID_cases_by_zip.tsv.gz')
md_county_to_zip <- read_tsv('../src/maryland_zipcode_to_county.tsv.gz')
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
ggplot(md_shape) +
geom_sf()
colnames(md_county_to_zip) <- c('ZIP_CODE', 'county')
md_covid_with_county <- inner_join(md_county_to_zip, md_covid_cases)
iris[is.na(iris)] <- 0
md_covid_with_county[is.na(md_covid_with_county)] <- 0
iris %>%
pivot_longer(-Species, names_to = 'obs', values_to = 'ncount') %>%
group_by(Species) %>%
summarise(total_count = sum(ncount)) %>%
pivot_wider(names_from = Species, values_from= total_count)
md_covid_by_county <-  md_covid_with_county %>%
select(-ZIP_CODE) %>%
pivot_longer(-county, names_to = 'date', values_to = 'number_of_cases') %>%
group_by(county, date) %>%
summarise(total_cases = sum(number_of_cases))
md_shape_tbl <- md_shape %>%
as_tibble %>%
mutate(county = tolower(county))
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(data == '2020-05-21')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020-05-21')
View(md_covid_by_county)
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020_05_21')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020_05_21')
md_shape_tbl <- md_shape %>%
as_tibble %>%
mutate(county = tolower(county))
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020_05_21')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) #%>%
filter(date == '05_21_2020')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '05_21_2020')
ggplot(md_covid_shape) +
geom_sf(aes(geometry = geometry, fill = total_cases))
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
View(md_shape)
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp 2/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp 2/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
View(md_shape)
View(md_covid_with_county)
library(ComplexHeatmap)
gene_expression_matrix <- readRDS('../src/gene_expression_ss.RDS') %>% {log2(.[1:24, 1:24]+1)}
View(gene_expression_matrix)
View(gene_expression_matrix)
View(gene_expression_matrix)
library(ComplexHeatmap)
library(tidyverse)
Heatmap(gene_expression_matrix)
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
library(circlize)
library(circlize)
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
col_fun(seq(0, 15))
Heatmap(gene_expression_matrix, name = "mat", col = col_fun)
Heatmap(gene_expression_matrix, name = "mat", col = col_fun)
View(col_fun)
col_fun(seq(0, 15))
viridisLite::viridis(100)
viridisLite::viridis(100)
viridis_pal
viridis_pal =viridisLite::viridis(100)
class(viridis_pal)
class(col_fun)
viridis_pal =viridisLite::viridis(100)
Heatmap(gene_expression_matrix, name = "mat", col = viridis_pal)
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
class(col_fun)
seq(0, 15)
col_fun(seq(0, 15))
viridisLite::viridis(100)
viridis_pal
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
Heatmap(gene_expression_matrix, name = "mat", col = viridis_pal)
Heatmap(gene_expression_matrix, col = viridis_pal,
rect_gp = gpar(col = "white", lwd = 2))
?gpar
Heatmap(gene_expression_matrix, col = viridis_pal,
rect_gp = gpar(col = "white", lwd = 2))
?Heatmap
