scale_fill_viridis_c('Total Covid Cases')+
labs(title = 'Day:{frame_time}') +
transition_time(date) +
ease_aes(line) +
theme_void()
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_time(date) +
ease_aes(line) +
theme_void()
View(test)
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_time(date) +
ease_aes(line)
test <- covid_by_county %>% filter(date %in% unique(date)[4])
View(test)
test <- covid_by_county %>% filter(date %in% unique(date)[1:4])
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_time(date) +
ease_aes(line)
transformr
transformr::
install.packages('transformr')
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_time(date) +
ease_aes(line)
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_time(date) +
ease_aes(line)
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_states(date) +
ease_aes(line)
covid_by_county <- covid_cases_zip_county %>%
pivot_longer(-c(zip_code, county, OBJECTID), names_to = 'date', values_to = 'covid_cases' ) %>%
group_by(county, date) %>%
summarise(total_cases = sum(covid_cases)) %>%
left_join(maryland_physical_boundaries)
covid_by_county <- covid_by_county %>%
mutate(date = lubridate::parse_date_time(date ,'mdy'))
test <- covid_by_county %>% filter(date %in% unique(date)[1:4])
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_states(date) +
ease_aes(line)
covid_by_county <- covid_by_county %>%
mutate(date = lubridate::parse_date_time(date ,'mdy') %>% as.Date())
covid_by_county <- covid_cases_zip_county %>%
pivot_longer(-c(zip_code, county, OBJECTID), names_to = 'date', values_to = 'covid_cases' ) %>%
group_by(county, date) %>%
summarise(total_cases = sum(covid_cases)) %>%
left_join(maryland_physical_boundaries)
covid_by_county <- covid_by_county %>%
mutate(date = lubridate::parse_date_time(date ,'mdy') %>% as.Date())
test <- covid_by_county %>% filter(date %in% unique(date)[1:4])
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
#labs(title = 'Day:{frame_time}') +
transition_states(date) +
ease_aes(line)
library(gapminder)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')#+
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
labs(title = 'Day:{frame_time}') +
transition_states(date) +
ease_aes('linear')
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
labs(title = 'Day:{frame_time}') +
transition_states(date)
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases')+
transition_states(date)
test[,1:4] %>% View
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date)
install.packages('tweenr')
install.packages('tweenr')
library(ggplot2)
library(tidyverse)
library(gganimate)
library(sf)
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date)
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date)
test[,-10] %>% View
ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_time(date)
gapminder
library(gapminder)
gapminder
table(gapminder$year)
table(test$date)
p <- ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_time(date)
animate(p)
p <- ggplot(test) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_time(date)
animate(p)
debugonce(animate(p))
ggplot(test[1:12]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[1:12,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
test <- covid_by_county %>% filter(date %in% unique(date)[1:4]) %>% arrange(date)
ggplot(test[1:12,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[13:24,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[24:36,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[27:36,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[37:48,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[1:24,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[25:48,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[49:64,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[49:72,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
ggplot(test[73:96,]) +
geom_sf(aes(geometry = geometry, fill = total_cases) ) #+
View(animate)
ggplot(test[73:96,]) +
geom_sf(aes(geometry = geometry) ) #+
ggplot(test[73:96,]) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_time(date)
ggplot(test) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_time(date)
test <- covid_by_county %>% filter(date %in% unique(date)[1:2]) %>% arrange(date)
test$date <- as.numeric(rep(2018, 24),rep(2020, 24) )
test$date <- as.numeric(c(rep(2018, 24),rep(2020, 24) ))
ggplot(test) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_time(date)
ggplot(test) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date)
?shadow_mark
ggplot(test) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
library(ggplot2)
library(patchwork)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
p1 <- ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggtitle('Plot 1')
p2 <- ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear)) +
ggtitle('Plot 2')
p3 <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
p4 <- ggplot(mtcars) +
geom_bar(aes(gear)) +
facet_wrap(~cyl) +
ggtitle('Plot 4')
p1 + p2 + p3 + p4
?plot_layout
p1|p2|p3
p1 / p2 /p3
p1 |(p2 /p3)
p1 |  sp
sp <- p2 /p3
p1 |  sp
?plot_layout
library(ggplot2)
library(patchwork)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp,fill(gear)))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
p2 <- ggplot(mtcars, fill = as.character(gear)) +
geom_boxplot(aes(gear, disp, group = gear)) +
ggtitle('Plot 2')
p1|p2|p3
ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=gear)) +
ggtitle('Plot 2')
p2 <- ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=as.character(gear))) +
ggtitle('Plot 2')
ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=as.character(gear))) +
ggtitle('Plot 2')
p1|p2|p3
library(ggplot2)
library(patchwork)
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
p1 <- ggplot(mtcars) +
geom_point(aes(mpg, disp,)) +
ggtitle('Plot 1')
p2 <- ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=as.character(gear))) +
ggtitle('Plot 2')
p3 <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
p4 <- ggplot(mtcars) +
geom_bar(aes(gear)) +
facet_wrap(~cyl) +
ggtitle('Plot 4')
p1 + p2 + p3 + p4
p1|p2|p3
p1 / p2 /p3
p1 + p2 + p3 + p4 + plot_layout(nrow=1)
p1 + p2 + p3 + p4 + plot_layout(ncol=1)
p1 + p2 + p3 + p4 + plot_layout(row=1)
p1 + p2 + p3 + p4 + plot_layout(nrow=1)
des <- '
AABB
AACD
AACD'
p1 + p2 + p3 + p4 + plot_layout(design = des)
p1 + p2 + p3 + p4 + plot_layout(design = des )
des <- '
AABB
AA##
AA##
AACD'
p1 + p2 + p3 + p4 + plot_layout(design = des )
p1 + p2 + p3 + p4 + plot_layout(design = des, tag_level = 'A' )
des <- '
AABB
AACD
AACD'
p1 + p2 + p3 + p4 + plot_layout(design = des, tag_level = 'A' )
?plot_annotation
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' )
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme(legend.box.just = 'left')
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' )
?p;lot_layou
?plot_layout
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic()
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(text = element_text(face = 'italic'))
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(text = element_text(font= 'mono'))
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(text = element_text(font= 'mono'))
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(text = element_text('mono'))
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(legend.position = 'left')
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(legend.box.just  = 'left')
p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(legend.box.just  = 'left') & ggtitle('')
all_plots <- p1 + p2 + p3 + p4 + plot_layout(design = des, guides = 'collect' ) & theme_classic() & theme(legend.box.just  = 'left') & ggtitle('')
all_plots
des <- '
AABB
AACD
AACD'
p1 + p2 + p3 + p4 + plot_layout(design = des )
des <- '
AABB
AACD
AACD'
p1 + p2 + p3 + p4 + plot_layout(design = des )
all_plots + plot_annotation(tag_levels = 'A')
?plot_annotation
library(ComplexHeatmap)
nr1 = 4; nr2 = 8; nr3 = 6; nr = nr1 + nr2 + nr3
nc1 = 6; nc2 = 8; nc3 = 10; nc = nc1 + nc2 + nc3
mat = cbind(rbind(matrix(rnorm(nr1*nc1, mean = 1,   sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc1, mean = 0,   sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc1, mean = 0,   sd = 0.5), nr = nr3)),
rbind(matrix(rnorm(nr1*nc2, mean = 0,   sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc2, mean = 1,   sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc2, mean = 0,   sd = 0.5), nr = nr3)),
rbind(matrix(rnorm(nr1*nc3, mean = 0.5, sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc3, mean = 0.5, sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc3, mean = 1,   sd = 0.5), nr = nr3))
)
mat = mat[sample(nr, nr), sample(nc, nc)] # random shuffle rows and columns
rownames(mat) = paste0("row", seq_len(nr))
colnames(mat) = paste0("column", seq_len(nc))
mat <- Heatmap(mat)
mat = cbind(rbind(matrix(rnorm(nr1*nc1, mean = 1,   sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc1, mean = 0,   sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc1, mean = 0,   sd = 0.5), nr = nr3)),
rbind(matrix(rnorm(nr1*nc2, mean = 0,   sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc2, mean = 1,   sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc2, mean = 0,   sd = 0.5), nr = nr3)),
rbind(matrix(rnorm(nr1*nc3, mean = 0.5, sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc3, mean = 0.5, sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc3, mean = 1,   sd = 0.5), nr = nr3))
)
mat = mat[sample(nr, nr), sample(nc, nc)] # random shuffle rows and columns
rownames(mat) = paste0("row", seq_len(nr))
colnames(mat) = paste0("column", seq_len(nc))
hm <- Heatmap(mat)
hm <- draw(Heatmap(mat))
str(rm)
str(hm)
type(hm)
type(hm)
class(hm)
library(ggplotify)
hm_ggplot <- as.ggplot(hm)
hm <- Heatmap(mat)
hm_ggplot <- as.ggplot(hm)
class(hm)
class(hm_ggplot)
hm_ggplot
hm_ggplot + theme(text = element_text('mono'))
hm_ggplot + theme(text = element_text(size = 12))
hm_ggplot + theme(text = element_text(size = 15))
hm_ggplot + theme(text = element_text(size =45))
p1+hm_ggplot &theme(text = element_text('mono'))
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggtitle('Plot 1')
#```{r, fig.height=1, fig.width=1}
#```
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggtitle('Plot 1')
#```{r, fig.height=1, fig.width=1}
#```
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggtitle('Plot 1')
#```{r, fig.height=1, fig.width=1}
#```
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggtitle('Plot 1')
library(sf)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
nc
str(nc)
nc_table <- nc %>% as_tibble
nc_table
ttab <- rbind(nc_table, nc_table)
ttab <- rbind(nc_table, nc_table %>% mutate(BIR74 = rnorm(100, mean(BIR74)))) %>% mutate(year = c(rep(2018, 100), rep(2020, 100)))
ggplot(test) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
ggplot(test[1:100,]) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
ggplot(ttab[1:100,]) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
ggplot(ttab[1:100,]) +
geom_sf(aes(geometry = geometry) )
ggplot(ttab[1:100,]) +
geom_sf(aes(geometry = geometry) )  +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
ggplot(ttab[1:100,]) +
geom_sf(aes(geometry = geometry) )  +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(year, 1, 1)
ggplot(ttab[1:100,]) +
geom_sf(aes(geometry = geometry, fill = BIR74))  +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(year, 1, 1)
ttab <- rbind(nc_table, nc_table %>% mutate(BIR74 = rnorm(100, 10))) %>% mutate(year = c(rep(2018, 100), rep(2020, 100)))
ggplot(ttab) +
geom_sf(aes(geometry = geometry, fill = BIR74))  +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(year, 1, 1)
ttab <- rbind(nc_table, nc_table %>% mutate(BIR74 = rnorm(100, 10))) %>%
mutate(year = c(rep('2018_05_10', 100), rep('2020_06_10', 100)) %>% lubridate::parse_date_time('ymd'))
ggplot(ttab) +
geom_sf(aes(geometry = geometry, fill = BIR74))  +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(year %>% , 1, 1)
ggplot(ttab) +
geom_sf(aes(geometry = geometry, fill = BIR74))  +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(year)
nc
maryl<- st_read('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')å
maryl<- st_read('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
nc
maryl<- st_read('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
maryl
library(ggplot2)
library(tidyverse)
library(gganimate)
library(sf)
covid_cases_by_zipcode <- read_tsv('day_2/MD_COVID_cases_by_zip.tsv.gz') %>% rename(zip_code = ZIP_CODE)
covid_cases_by_zipcode[is.na(covid_cases_by_zipcode)] <- 0
zip_to_county <- read_tsv('day_2/maryland_zipcode_to_county.tsv.gz') %>% mutate(county = tolower(county))
covid_cases_zip_county <- inner_join(zip_to_county, covid_cases_by_zipcode)
maryland_physical_boundaries <- st_read('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp') %>% as_tibble %>%
mutate(county = tolower(county))
sum(maryland_physical_boundaries$county %in% covid_cases_zip_county$county)
covid_by_county <- covid_cases_zip_county %>%
pivot_longer(-c(zip_code, county, OBJECTID), names_to = 'date', values_to = 'covid_cases' ) %>%
group_by(county, date) %>%
summarise(total_cases = sum(covid_cases)) %>%
left_join(maryland_physical_boundaries)
fc <-  filter (covid_by_county, date == '05_21_2020')
covid_by_county <- covid_by_county %>%
mutate(date = lubridate::parse_date_time(date ,'mdy') %>% as.Date())
test <- covid_by_county %>% filter(date %in% unique(date)[1:2]) %>% arrange(date)
test$date <- as.numeric(c(rep(2018, 24),rep(2020, 24) ))
ggplot(test) +
geom_sf(aes(geometry = geometry) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
View(maryland_physical_boundaries)
table(test$date)
test$total_cases
maryl
ggplot(test) +
geom_sf(aes(geometry = geometry, crs =3857 ) ) +
#scale_fill_viridis_c('Total Covid Cases', na.value = 'grey')+
transition_states(date, 1, 1)
ncol(nc)
ncol(maryl)
transformr::tween_sf
transformr::tween_sf %>% View
st_geometry(maryl)
st_geometry(maryl)[1]
devtools
library(remotes)
?install_github
library(grid)
library(ggplotify)
img_gg readPNG('src/boxplot.png') %>% rasterGrob %>% as.ggplot
img_gg-/ readPNG('src/boxplot.png') %>% rasterGrob %>% as.ggplot
img_gg <-  readPNG('src/boxplot.png') %>% rasterGrob %>% as.ggplot
library(png)
library(grid)
library(ggplotify)
img_gg <-  readPNG('src/boxplot.png') %>% rasterGrob %>% as.ggplot
img_gg
?unit
img_gg <-  readPNG('src/boxplot.png') %>% rasterGrob(width = 200, height = 400) %>% as.ggplot
img_gg
?rtasterGrob
?rasterGrob
readPNG('src/boxplot.png') %>% rasterGrob(interpolate = T) %>% as.ggplot
library(png)
library(grid)
library(ggplotify)
readPNG('src/boxplot.png') %>% rasterGrob(interpolate = T) %>% as.ggplot
library(png)
library(grid)
library(ggplotify)
readPNG('src/boxplot.png') %>% rasterGrob(interpolate = T) %>% as.ggplot
readPNG('src/boxplot.png') %>% rasterGrob(interpolate = T) %>% as.ggplot
#```{r, fig.height=1, fig.width=1}
#```
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggtitle('Plot 1')
library(knitr)
