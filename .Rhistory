ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()#+
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()#+
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()#+
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = continent)) +
geom_point(alpha = 0.5, show.legend = FALSE) +
facet_wrap(~continent)+
scale_color_aaas()+
scale_size(range = c(2, 12)) +
scale_x_log10()+
transition_time(year)
#remotes::install_github("coolbutuseless/ggpattern")
library(ggpattern)
library(sf)
library(ggspatial)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
ggplot(data = nc ) +
geom_sf() +
theme_bw()
View(gapminder_ss)
nc <- st_read(system.file("shape/nc.shp", package="sf"))
class(nc)
nc_table <- as_tibble(nc)
library(tidyverse)
nc_table <- as_tibble(nc)
View(nc_table)
ggplot(nc_table)+
geom_sf(aes(geometry =  geometry))
colnames(nc_table)
nc_table <- as_tibble(nc) %>% rename(shape_data = geometry)
ggplot(nc_table)+
geom_sf(aes(geometry =  shape_data))
nc_table <- as_tibble(nc) %>% rename(shape_data = geometry)
data("USArrests")
USArrests
data("USArrests")
USArrests
states <- maps::map("state", plot = FALSE, fill = TRUE) %>% st_as_sf() %>%
as_tibble %>%
rename(state = ID,
geometry = geom)
tates
states
states <- states %>%
mutate(state = tolower(state))
arrestData_with_mapData <- arrests %>%
mutate(state = tolower(state)) %>%
inner_join( states)
states
states <- states %>%
mutate(state = tolower(state))
arrests <- USArrests %>% rownames_to_column('state')
arrestData_with_mapData <- arrests %>%
mutate(state = tolower(state)) %>%
inner_join( states)
View(arrestData_with_mapData)
View(arrestData_with_mapData)
md_covid_cases <- read_tsv('../src/MD_COVID_cases_by_zip.tsv.gz')
md_county_to_zip <- read_tsv('../src/maryland_zipcode_to_county.tsv.gz')
md_shape <- st_read('../src/maryland_counties.shp')
'../src/maryland_counties.shp'
md_shape <- st_read('../src/maryland_counties.shp')
md_shape <- st_read ('https://github.com/davemcg/MD_ZIP_LEVEL_COVID_APP/raw/master/www/Maryland_Political_Boundaries_-_ZIP_Codes_-_5_Digit-shp/BNDY_ZIPCodes5Digit_MDP.shp')
library(sf)
library(ggspatial)
library(tidyverse)
md_covid_cases <- read_tsv('../src/MD_COVID_cases_by_zip.tsv.gz')
md_county_to_zip <- read_tsv('../src/maryland_zipcode_to_county.tsv.gz')
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
ggplot(md_shape) +
geom_sf()
colnames(md_county_to_zip) <- c('ZIP_CODE', 'county')
md_covid_with_county <- inner_join(md_county_to_zip, md_covid_cases)
iris[is.na(iris)] <- 0
md_covid_with_county[is.na(md_covid_with_county)] <- 0
iris %>%
pivot_longer(-Species, names_to = 'obs', values_to = 'ncount') %>%
group_by(Species) %>%
summarise(total_count = sum(ncount)) %>%
pivot_wider(names_from = Species, values_from= total_count)
md_covid_by_county <-  md_covid_with_county %>%
select(-ZIP_CODE) %>%
pivot_longer(-county, names_to = 'date', values_to = 'number_of_cases') %>%
group_by(county, date) %>%
summarise(total_cases = sum(number_of_cases))
md_shape_tbl <- md_shape %>%
as_tibble %>%
mutate(county = tolower(county))
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(data == '2020-05-21')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020-05-21')
View(md_covid_by_county)
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020_05_21')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020_05_21')
md_shape_tbl <- md_shape %>%
as_tibble %>%
mutate(county = tolower(county))
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '2020_05_21')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) #%>%
filter(date == '05_21_2020')
md_covid_shape <-  inner_join(md_shape_tbl, md_covid_by_county) %>%
filter(date == '05_21_2020')
ggplot(md_covid_shape) +
geom_sf(aes(geometry = geometry, fill = total_cases))
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
View(md_shape)
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp 2/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
md_shape <- read_sf('~/Downloads/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_-shp 2/Maryland_Physical_Boundaries_-_County_Boundaries__Generalized_.shp')
View(md_shape)
View(md_covid_with_county)
library(ComplexHeatmap)
gene_expression_matrix <- readRDS('../src/gene_expression_ss.RDS') %>% {log2(.[1:24, 1:24]+1)}
View(gene_expression_matrix)
View(gene_expression_matrix)
View(gene_expression_matrix)
library(ComplexHeatmap)
library(tidyverse)
Heatmap(gene_expression_matrix)
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
library(circlize)
library(circlize)
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
col_fun(seq(0, 15))
Heatmap(gene_expression_matrix, name = "mat", col = col_fun)
Heatmap(gene_expression_matrix, name = "mat", col = col_fun)
View(col_fun)
col_fun(seq(0, 15))
viridisLite::viridis(100)
viridisLite::viridis(100)
viridis_pal
viridis_pal =viridisLite::viridis(100)
class(viridis_pal)
class(col_fun)
viridis_pal =viridisLite::viridis(100)
Heatmap(gene_expression_matrix, name = "mat", col = viridis_pal)
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
class(col_fun)
seq(0, 15)
col_fun(seq(0, 15))
viridisLite::viridis(100)
viridis_pal
col_fun = colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
colorRamp2(c(0, 5, 15), c("purple", "green", "yellow"))
Heatmap(gene_expression_matrix, name = "mat", col = viridis_pal)
Heatmap(gene_expression_matrix, col = viridis_pal,
rect_gp = gpar(col = "white", lwd = 2))
?gpar
Heatmap(gene_expression_matrix, col = viridis_pal,
rect_gp = gpar(col = "white", lwd = 2))
?Heatmap
kable(iris[5, ])
library(knitr)
kable(iris[5, ])
kable(iris[1:5, ])
DT::datatable(iris[1:5, ])
DT::datatable(iris)
DT::datatable(dplyr::mpg)
DT::datatable(data(dplyr::mpg))
library(tidyverse)
DT::datatable(mpg)
k <- read_tsv('~/Downloads/media-4')
View(k)
k <- read_tsv('../src/gene_expression_sample_tsv.gz')
View(k)
k <- read_tsv('../src/tx_expression_subset.tsv.gz')
gtf <- read_tsv('../src/gtf_example.tsv.gz')
gtf <- read_tsv('../src/gtf_example.tsv.gz')
gn <-  filter(gtf, transcript_id %in% gtf$transcript_id) %>% pull(gene_name) %>% unique
unique(gtf$gene_name) %>% length
gtf <- rtracklayer::readGFF('~/Downloads/gencode.v35.annotation.gtf.gz')
tx2gene <- gtf %>% filter(type == 'transcript', transcript_id %in% k$transcript_id)
tx2gene <- gtf %>% filter(type == 'transcript', transcript_id %in% k$transcript_id) %>%
select(gene_name,transcript_id)
write_tsv(tx2gene, '../day_5/tx2gene.tsv.gz')
tx2gene <- gtf %>% filter(type == 'transcript', transcript_id %in% k$transcript_id) %>% left_join(k, .) %>%   select(gene_name,transcript_id)
View(tx2gene)
tx2gene <- gtf %>% filter(type == 'transcript', transcript_id %in% k$transcript_id) %>% left_join(k, .) %>%   select(gene_name,transcript_id) %>% mutate(gene_name = replace(gene_name,                                                                                                list = is.na(gene_name),
values = sample(gtf$gene_name, sum(is.na(gene_name)))  ) )
sum(is.na(tx2gene$gene_name))
v
write_tsv(tx2gene, '../day_5/tx2gene.tsv.gz')
tibble(gene_name = sample(unique(gtf$gene_name),5000,
pvalue = rnorm(n=10000, .5, sd = .2) %>%
sample(.[between(., .05, 1)], 5000, replace = T) ))
tibble(gene_name = sample(unique(gtf$gene_name),5000),
pvalue = rnorm(n=10000, .5, sd = .2) %>%
sample(.[between(., .05, 1)], 5000, replace = T) ))
tibble(gene_name = sample(unique(gtf$gene_name),5000),
pvalue = rnorm(n=10000, .5, sd = .2) %>%
sample(.[between(., .05, 1)], 5000, replace = T) )
rnorm(n=10000, .5, sd = .2) %>%
sample(.[between(., .05, 1)], 5000, replace = T)
rnorm(n=10000, .5, sd = .2) #%>%
rnorm(n=10000, .5, sd = .2) %>%
{sample(.[between(., .05, 1)], 5000, replace = T)}
neg_p <-  rnorm(n=10000, .5, sd = .2) %>% {sample(.[between(., .05, 1)], 5000, replace = T)}
pos_p <-  rnorm(n=10000, .5, sd = .2) %>% {sample(.[between(., 0, .05)], 5000, replace = T)}
pos_p <-  rnorm(n=10000, .5, sd = .2) %>% {sample(.[between(., 0, .05)], nrow(k), replace = T)}
neg_l2fc <- rnorm(n=10000, 0, .2) %>% {sample(.[between(., .-1, 1)], 5000, replace = T)}
pos_l2fc <- rnorm(n=10000, .5, sd = .5) %>% {sample(.[.>1 | . <-1, nrow(k), replace = T)}
pos_l2fc <- rnorm(n=10000, .5, sd = .5) %>% {sample(.[.>1 | . <-]1, nrow(k), replace = T)}
pos_l2fc <- rnorm(n=10000, .5, sd = .5) %>% {sample(.[.>1 | . < -1], nrow(k), replace = T)}
pos_p <- rnorm(n=10000, .5, sd = .4) %>% {sample(.[between(., 0, .05)], nrow(k), replace = T)}
pos_l2fc <- rnorm(n=10000, .5, sd = .5) %>% {sample(.[.>1 | . < -1], nrow(k), replace = T)}
neg_p <-  rnorm(n=10000, .5, sd = .2) %>% {sample(.[between(., .05, 1)], 5000, replace = T)}
neg_l2fc <- rnorm(n=10000, 0, .2) %>% {sample(.[between(., .-1, 1)], 5000, replace = T)}
pos_p <- rnorm(n=10000, .5, sd = .4) %>% {sample(.[between(., 0, .05)], n_distinct(tx2gene$gene_name), replace = T)}
pos_l2fc <- rnorm(n=10000, .5, sd = .5) %>% {sample(.[.>1 | . < -1], n_distinct(tx2gene$gene_name), replace = T)}
volcano_data <- bind_rows(
tibble(gene_name = sample(unique(gtf$gene_name), 5000, replace = F),
pvalue = neg_p,
log2fc = neg_l2fc),
tibble(gene_name = unique(tx2gene$gene_name),
pvalue = pos_p,
log2fc = pos_l2fc
)
)
View(volcano_data)
write_tsv(volcano_data, '../day_5/diff_gene_exp.tsv.gz)
write_tsv(volcano_data, '../day_5/diff_gene_exp.tsv.gz')
write_tsv(volcano_data, '../day_5/diff_gene_exp.tsv.gz')
volcano_data <- bind_rows(
tibble(gene_name = sample(unique(gtf$gene_name), 5000, replace = F),
pvalue = neg_p,
log2fc = neg_l2fc),
tibble(gene_name = unique(tx2gene$gene_name),
pvalue = pos_p,
log2fc = pos_l2fc
)
) %>% mutate(significant = ifelse(pvalue <.05& (log2fc > 1 | log2fc < -1)) )
volcano_data <- bind_rows(
tibble(gene_name = sample(unique(gtf$gene_name), 5000, replace = F),
pvalue = neg_p,
log2fc = neg_l2fc),
tibble(gene_name = unique(tx2gene$gene_name),
pvalue = pos_p,
log2fc = pos_l2fc
)
) %>% mutate(significant = ifelse(pvalue <.05& (log2fc > 1 | log2fc < -1),'sig', 'not_sig'))
write_tsv(volcano_data, '../day_5/diff_gene_exp.tsv.gz')
sum(volcano_data$significant == 'sig')
sum(is.na(gene_name)))  ) )
neg_p <-  rnorm(n=10000, .5, sd = .2) %>% {sample(.[between(., .05, 1)], 5000, replace = T)}
neg_l2fc <- rnorm(n=10000, 0, .2) %>% {sample(.[between(., .-1, 1)], 5000, replace = T)}
pos_p <- rnorm(n=10000, .5, sd = .4) %>% {sample(.[between(., 0, .0499)], n_distinct(tx2gene$gene_name), replace = T)}
pos_l2fc <- rnorm(n=10000, .5, sd = .5) %>% {sample(.[.>1 | . < -1], n_distinct(tx2gene$gene_name), replace = T)}
volcano_data <- bind_rows(
tibble(gene_name = sample(unique(gtf$gene_name), 5000, replace = F),
pvalue = neg_p,
log2fc = neg_l2fc),
tibble(gene_name = unique(tx2gene$gene_name),
pvalue = pos_p,
log2fc = pos_l2fc
)
) %>% mutate(significant = ifelse(pvalue <.05& (log2fc > 1 | log2fc < -1),'sig', 'not_sig'))
write_tsv(volcano_data, '../day_5/diff_gene_exp.tsv.gz')
sum(volcano_data$significant == 'sig')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dif_exp_data <- read_tsv('diff_gene_exp.tsv.gz')
View(dif_exp_data)
library(tidyverse)
diff_exp_data <- read_tsv('diff_gene_exp.tsv.gz')
ggplot(diff_exp_data) +
geom_point(z=log2fc, y= -log2(pvalue))
ggplot(diff_exp_data) +
geom_point(x=log2fc, y= -log2(pvalue))
ggplot(diff_exp_data) +
geom_point(aes(x=log2fc, y= -log2(pvalue)))
ggplot(diff_exp_data) +
geom_point(aes(x=log2fc, y= -log2(pvalue, color = significant  )))
read_tsv('tx2gene.tsv.gz')
ggplot(diff_exp_data) +
geom_point(aes(x=log2fc,
y= -log2(pvalue),
color = significant  )))
ggplot(diff_exp_data) +
geom_point(aes(x=log2fc,
y= -log2(pvalue),
color = significant  ))
diff_exp_data
tx2gene <- read_tsv('tx2gene.tsv.gz')
tx_exp <- read_tsv('../src/tx_expression_subset.tsv.gz')
tx_exp <- read_tsv('../src/tx_expression_subset.tsv.gz')
tx2gene <- read_tsv('tx2gene.tsv.gz')
gene_tx_expression <- inner_join(tx2gene, tx_exp)
gene_expression_long <-  gene_tx_expression %>%
select(-transcript_id) %>%
pivot_longer( -gene_name, names_to = 'sample', values_to = 'expression')
gene_expressionn_long_summarized <- gene_expression_long %>%
group_by(gene_name, sample) %>%
summarise(gene_exp = sum(expression))
gene_expressionn_long_summarized
View(gene_tx_expression)
View(gene_expressionn_long_summarized)
gene_to_plot <- gene_expressionn_long_summarized %>%
filter(gene_name == 'A4GALT')
library(ComplexHeatmap)
Heatmap(gene_expression_matrix)
library(ComplexHeatmap)
gene_expression_matrix <- readRDS('../src/gene_expression_ss.RDS') %>% {log2(.[1:24, 1:24]+1)}
Heatmap(gene_expression_matrix)
gene_to_plot <- gene_expressionn_long_summarized %>%
filter(gene_name == 'A4GALT')
ggplot(gene_to_plot) +
geom_boxplot(aes(x= gene_name, y=gene_exp), width = .25)
head(diff_exp_data)
tx_exp <- read_tsv('../src/tx_expression_subset.tsv.gz')
View(tx_exp)
View(tx2gene)
View(gene_tx_expression)
View(tx_exp)
View(gene_expression_long)
View(gene_tx_expression)
View(gene_expression_long)
View(gene_expressionn_long_summarized)
View(gene_tx_expression)
library(tidyverse)
diff_exp_data <- read_tsv('diff_gene_exp.tsv.gz')
head(diff_exp_data)
library(knitr)
library(shiny); runApp('shiny_examples/basic_app.R')
runApp('shiny_examples/basic_app.R')
runApp('shiny_examples/basic_app.R')
install.packages('shiny')
runApp('shiny_examples/basic_app.R')
runApp('shiny_examples/basic_app.R')
runApp('shiny_examples/basic_app.R')
runApp('day_5')
library(ggplot2)
View(iris)
colnames(iris)
runApp('day_5')
runApp('day_5')
runApp('day_5')
runApp('day_5')
unique(iris$Species)
runApp('day_5')
runApp('day_5')
runApp('day_5')
runApp('day_5')
runApp('day_5')
install.packages('DT')
runApp('day_5')
runApp('day_5')
runApp('day_5/app_2/columnar_app.R')
runApp('day_5/app_2/columnar_app.R')
library(tidyverse)
library(knitr)
opts_chunk$set(warning = FALSE, echo = FALSE, message = F )
write_tsv(gene_expressionn_long_summarized,  'app_2/gene_expressionn_long.tsv')
runApp('day_5/app_2/columnar_app.R')
gene_expresion_long <-  read_tsv('gene_expressionn_long.tsv')
gene_expresion_long <-  read_tsv('gene_expressionn_long.tsv')x
gene_expresion_long <-  read_tsv('gene_expressionn_long.tsv')
setwd('day_5/')
gene_expresion_long <-  read_tsv('app_2/gene_expressionn_long.tsv')
gene_expression_matrix <- readRDS('../src/gene_expression_ss.RDS') %>% {log2(.[1:24, 1:24]+1)}
diff_exp_data <- read_tsv('diff_gene_exp.tsv.gz')
?selectizeInput
View(gene_expresion_long)
runApp('app_2/columnar_app.R')
runApp('app_2/columnar_app.R')
runApp('app_2/columnar_app.R')
runApp('app_2/columnar_app.R')
getwd()
getwd()
runApp('app_2/columnar_app.R')
write_tsv(gene_expressionn_long_summarized,  'genes.tsv')
write_tsv(gene_expressionn_long_summarized,  'genes.tsv')
getwd()
runApp('app_2/columnar_app.R')
runApp('app_2/columnar_app.R')
library(gggplot2)
library(ggplot2)
p1 <- ggplot(mtcars) +
geom_point(aes(mpg, disp,)) +
ggtitle('Plot 1')
p2 <- ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=as.character(gear))) +
ggtitle('Plot 2')
p3 <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
p4 <- ggplot(mtcars) +
geom_bar(aes(gear)) +
facet_wrap(~cyl) +
ggtitle('Plot 4')
install.packages(c('patchwork', 'ggplotify'))
library(patchwork)
library(patchwork)x
library(patchwork)
p1 <- ggplot(mtcars) +
geom_point(aes(mpg, disp,)) +
ggtitle('Plot 1')
p2 <- ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=as.character(gear))) +
ggtitle('Plot 2')
p3 <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
p4 <- ggplot(mtcars) +
geom_bar(aes(gear)) +
facet_wrap(~cyl) +
ggtitle('Plot 4')
p1+p2
p1+p2+p3+p4
library(patchwork)
p1+p2+p3+p4
p1 | p2 | p3 |p4
p1 | p2 | p3 |p4
all_plots <- p1+p2+p3+p4
all_plots + plot_layout(ncol = 1)
all_plots <- p1+p2+p3+p4
all_plots + plot_layout(ncol = 1)
design <- '
AAAB
AAAC
AAAD
'
all_plots + plot_layout(design = design)
all_plots + plot_layout(design = design)
library(ggplot2)
p1 <- ggplot(mtcars) +
geom_point(aes(mpg, disp,)) +
ggtitle('Plot 1')
p2 <- ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear, fill=as.character(gear))) +
ggtitle('Plot 2') +
guides(fill = guide_legend(title = 'gear'))
p3 <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
p4 <- ggplot(mtcars) +
geom_bar(aes(gear)) +
facet_wrap(~cyl) +
ggtitle('Plot 4')
design <- '
AAAB
AAAC
AAAD
'
all_plots + plot_layout(design = design)
all_plots <- p1+p2+p3+p4
all_plots + plot_layout(ncol = 1)
design <- '
AAAB
AAAC
AAAD
'
all_plots + plot_layout(design = design)
all_plots + plot_layout(design = design) & theme(legend.position = 'top')
all_plots + plot_layout(design = design, guides = 'collect') & theme(legend.position = 'top')
install.packages(c('plotly', 'ggiraph'))
library(ggiraph)
mtcars %>% View
library(tidyverse)
mtcars %>% View
?geom_point_interactive
plot_interactive <-  ggplot(mtcars) +
geom_point_interactive(aes(hp, wt, colour = mpg,tooltip = carb)) +
ggtitle('Plot 3')
girafe(ggobj = plot_interactive)
install.packages(c('plotly', 'ggiraph'), type = 'source')
install.packages(c("plotly", "ggiraph"), type = "source")
install.packages(c("plotly", "ggiraph"), type = "source")
install.packages(c("plotly", "ggiraph"), type = "source")
library(plotly)
ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
plot_static <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3')
plot_static %>% ggplotly()
plot_static <- ggplot(mtcars) +
geom_point(aes(hp, wt, colour = mpg)) +
ggtitle('Plot 3') +
theme_classic()
plot_static %>% ggplotly()
install.packages('systemfonts')
